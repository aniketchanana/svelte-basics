{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Footer.svelte",
    "../../Header.svelte",
    "../../PollDetails.svelte",
    "../../PollForm.svelte",
    "../../PollList.svelte",
    "../../Button.svelte",
    "../../Card.svelte",
    "../../Tabs.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Header from './components/Header.svelte';\n\timport Footer from './components/Footer.svelte';\n\timport PollForm from './components/PollForm.svelte';\n\timport PollList from './components/PollList.svelte';\n\timport Tabs from './shared/Tabs.svelte';\n\t//tabs\n\tlet items = ['current polls','add new poll'];\n\tlet activeItem = 'current polls';\n\tconst tabChange = (e) => {\n\t\tactiveItem = e.detail;\n\t}\n\tconst handelAdd = (e) => {\n\t\tconst poll = e.detail;\n\t\tactiveItem = 'current polls';\n\t}\t\n</script>\n\n<Header/>\n<main>\n\t<Tabs {activeItem} {items} on:tab_change={tabChange}/>\n\t{#if activeItem === 'current polls'}\n\t\t<PollList/>\n\t{:else if activeItem === 'add new poll'}\n\t \t<PollForm on:add_poll={handelAdd}/>\n\t{/if}\n</main>\n<Footer/>\n\n<style>\n\tmain {\n\t\tmax-width: 960px;\n\t\tmargin: 40px auto;\n\t}\n</style>",
    "<footer>\n    <div class=\"copyright\">copyright 2020 @aniketchanana</div>\n</footer>\n\n<style>\n    footer {\n        padding: 40px;\n        text-align: center;\n    }\n    .copyright {\n        color: #aaa;\n        display: inline-block;\n        padding: 20px;\n        border-top: 1px solid #ddd;\n    }\n</style>",
    "<header>\n    <h1>\n        <img src=\"./images/ninja.svg\" alt=\"poll ninja logo\">\n    </h1>\n</header>\n\n<style>\n    header {\n        background: #f7f7f7;\n        padding: 20px;\n    }\n    h1 {\n        text-align: center;\n    }\n    img {\n        max-width: 180px;\n    }\n</style>",
    "<script>\n    import PollStore from '../stores/PollStore.js';\n    import Card from '../shared/Card.svelte';\n    import Button from '../shared/Button.svelte';\n    import {tweened} from 'svelte/motion';\n    export let poll;\n\n    $: totalVotes = poll.voteA + poll.voteB;\n    $: percentA = Math.floor(100 / totalVotes * poll.voteA) || 0;\n    $: percentB = Math.floor(100 / totalVotes * poll.voteB) || 0;\n\n    const tweenedA = tweened(0);\n    const tweenedB = tweened(0);\n\n    $: tweenedA.set(percentA);\n    $: tweenedB.set(percentB);\n\n    $: console.log($tweenedA,$tweenedB);\n    //tweened percentages\n    const handelVote = (option,id) => {\n        PollStore.update(currentPolls => {\n            let copiedPolls = [...currentPolls];\n            let upVotedPoll = copiedPolls.find((poll) => poll.id === id);\n            if(option === 'a') {\n                upVotedPoll.voteA++;\n            }\n            if(option === 'b') {\n                upVotedPoll.voteB++;\n            }\n\n            return copiedPolls;\n        })\n    }\n    const handelDelete = id => {\n        console.log(id);\n        PollStore.update(currentPolls => {\n            return currentPolls.filter( poll => poll.id !== id);\n        })\n    }\n</script>\n\n<Card>\n    <div class=\"poll\">\n        <h3>{poll.question}</h3>\n        <p>Total Votes: ({totalVotes})</p>\n        <div class=\"answer\" on:click={() => handelVote('a',poll.id)}>\n            <div class=\"percent percent-a\" style=\"width: {$tweenedA}%;\"></div>\n            <span>{poll.answerA} ({poll.voteA})</span>\n        </div>\n        <div class=\"answer\" on:click={() => handelVote('b',poll.id)}>\n            <div class=\"percent percent-b\" style=\"width: {$tweenedB}%;\"></div>\n            <span>{poll.answerB} ({poll.voteB})</span>\n        </div>\n        <div class=\"delete\">\n            <Button flat={true} on:click={()=> handelDelete(poll.id)}>Delete</Button>\n        </div>\n    </div>\n</Card>\n\n<style>\n  h3{\n    margin: 0 auto;\n    color: #555;\n  }\n  p{\n    margin-top: 6px;\n    font-size: 14px;\n    color: #aaa;\n    margin-bottom: 30px;\n  }\n  .answer{\n    background: #fafafa;\n    cursor: pointer;\n    margin: 10px auto;\n    position: relative;\n  }\n  .answer:hover{\n    opacity: 0.6;\n  }\n  span{\n    display: inline-block;\n    padding: 10px 20px;\n  }\n  .percent {\n    height: 100%;\n    position: absolute;\n    box-sizing: border-box;\n  }\n  .percent-a {\n    border-left: 4px solid #d91b42;\n    background: rgba(217, 27, 66,0.5);\n  }\n  .percent-b {\n    border-left: 4px solid #45c496;\n    background: rgba(69, 196, 150,0.2);\n  }\n  .delete {\n    margin-top: 30px;\n    text-align: center;\n}\n</style>",
    "<script>\n    import PollStore from '../stores/PollStore.js';\n    import {createEventDispatcher} from 'svelte';\n    const dispatch = createEventDispatcher();\n    import Button from '../shared/Button.svelte';\n    let fields = { question:'',answerA:'',answerB:''};\n    let errors = {question:'',answerA:'',answerB:''};\n    let valid = false;\n    const submitHandeler = () => {\n        valid = true;\n        //validate question\n        if(fields.question.trim().length < 5) {\n            valid = false;\n            errors.question = 'Question must be at least 5 character long'\n        } else {\n            errors.question = '';\n        }\n        //validate answerA\n        if(fields.answerA.trim().length < 1) {\n            valid = false;\n            errors.answerA = 'Question must be at least 5 character long'\n        } else {\n            errors.answerA = '';\n        }\n        //validate answerB\n        if(fields.answerB.trim().length < 1) {\n            valid = false;\n            errors.answerB = 'Question must be at least 5 character long'\n        } else {\n            errors.answerB = '';\n        }\n        //add new poll\n        if (valid) {\n            let poll = {...fields,voteA:0,voteB:0,id:Math.random()};\n            //save poll to store\n            PollStore.update(currentPolls => {\n                return [poll,...currentPolls];\n            })\n            dispatch('add_poll');\n        }\n    }\n</script>\n\n<form on:submit|preventDefault={submitHandeler}>\n    <div class=\"form-field\">\n        <label for=\"question\">Poll question</label>\n        <input type=\"text\" id=\"question\" bind:value={fields.question}>\n        <div class=\"error\">{errors.question}</div>\n    </div>\n    <div class=\"form-field\">\n        <label for=\"answer-a\">Answer A:</label>\n        <input type=\"text\" id=\"answer-a\" bind:value={fields.answerA}>\n        <div class=\"error\">{errors.answerA}</div>\n    </div>\n    <div class=\"form-field\">\n        <label for=\"answer-b\">Answer B:</label>\n        <input type=\"text\" id=\"answer-b\" bind:value={fields.answerB}>\n        <div class=\"error\">{errors.answerB}</div>\n    </div>\n    <Button type=\"secondary\" flat={false}>\n        Add poll\n    </Button>\n</form>\n\n<style>\n    form {\n        width: 400px;\n        margin: 0 auto;\n        text-align: center;\n    }\n    .form-field {\n        margin: 18px suto;\n    }\n    input {\n        width: 100%;\n        border-radius: 6px;\n    }\n    label {\n        margin: 10px auto;\n        text-align: left;\n    }\n    .error {\n        font-weight: bold;\n        font-size: 12px;\n        color: #d91b42;\n    }\n</style>",
    "<script>\n    import {fade, slide, scale} from 'svelte/transition';\n    import { flip } from 'svelte/animate';\n    import PollStore from '../stores/PollStore';\n    // import {onDestroy} from 'svelte';\n    let polls = [];\n    import PollDetails from './PollDetails.svelte';\n    // const unSub = PollStore.subscribe( data => {\n    //     polls = data;\n    // });\n    // onDestroy(()=>{\n    //     console.log('component destroyed');\n    //     unSub();\n    // })\n</script>\n\n<div class=\"poll-list\">\n    <!-- added listener to store is value changes we can get the change using this eliminates subscribing and unsubscribing of store -->\n    {#each $PollStore as poll (poll.id)}\n        <div in:fade out:scale|local animate:flip={{duration:500}}>\n            <PollDetails {poll}/>\n        </div>\n    {/each}\n</div>\n\n<style>\n    .poll-list {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        grid-gap: 20px;\n    }\n</style>",
    "<script>\n    export let type = 'primary';\n    export let flat = false;\n    export let inverse = false;\n</script>\n\n<button class={type} class:flat={flat} class:inverse={inverse} on:click>\n    <slot></slot>\n</button>\n\n<style>\n    button {\n        border: 0;\n        cursor: pointer;\n        border-radius: 8px;\n        padding: 8px 12px;\n        box-shadow: 1px 2px 3px rgba(0, 0, 0, 0.2);\n    }\n\n    .primary {\n        background: #d91b42;\n        color: white;\n    }\n\n    .secondary {\n        background: #45c496;\n        color: white;\n    }\n\n    .flat {\n        box-shadow: none;\n    }\n\n    .primary.inverse {\n        background: white;\n        color: #d91b42;\n    }\n\n    .secondary.inverse {\n        background: white;\n        color: #45c496;\n        border: 2px solid #d91b42;\n    }\n</style>",
    "<div class=\"card\">\n    <slot></slot>\n</div>\n\n<style>\n    .card {\n        background-color: #fff;\n        padding: 20px;\n        box-shadow: 0px 2px 4px rgba(0,0,0,0.1);\n    }\n</style>",
    "<script>\n    import {createEventDispatcher} from 'svelte';\n    const dispatch = createEventDispatcher();\n    export let items;\n    export let activeItem;\n</script>\n\n<div class=\"tabs\">\n    <ul>\n        {#each items as item}\n            <li on:click={()=> dispatch('tab_change',item)}>\n                <div class:active={item === activeItem}>{item}</div>\n            </li>\n        {/each}\n    </ul>\n</div>\n\n<style>\n    .active {\n        color: #d91b42;\n        border-bottom: 2px solid #d91b42;\n        padding-bottom: 8px;\n    }\n    .tabs {\n        margin-bottom: 40px;\n    }\n    ul {\n        display: flex;\n        justify-content: center;\n        padding: 0;\n        list-style-type: none;\n    }\n    li {\n        margin: 0 16px;\n        font-size: 18px;\n        color: #555;\n        cursor: pointer;\n    }\n</style>"
  ],
  "names": [],
  "mappings": "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"
}